using System;

namespace MP1._5
{
    interface Interface1
    {
        void Method1();
    }
    interface Interface2
    {
        void Method2();
    }
    class BaseClass
    {
        public void Method()
        {
            Console.WriteLine("Метод класса - BaseClass.");
        }
    }

    // В C# допустимо множественное наследование только от интерфейсов.
    // Множественное наследование реализации (т.е. от двух и более классов или структур) недопустимо
    // Допустимо множественное наследование от одного класса и многих интерфейсов.

    namespace Interfaces
    {
        class DerivedClass : BaseClass, Interface1, Interface2
        {
            public void Method1()
            {
                Console.WriteLine("Реализация метода Method1() из Interface1");
            }
            public void Method2()
            {
                Console.WriteLine("Реализация метода Method2() из Interface2");
            }
        }

        class Program
        {
            static void Main()
            {
                DerivedClass instance = new DerivedClass();
                instance.Method();
                instance.Method1();
                instance.Method2();

                Console.WriteLine(new string('-', 40));

                BaseClass instance0 = instance as BaseClass;
                instance0.Method();

                Interface1 instance1 = instance as Interface1;
                instance1.Method1();

                Interface2 instance2 = instance as Interface2;
                instance2.Method2();

                // Delay.
                Console.ReadKey();
            }
        }
    }
}
